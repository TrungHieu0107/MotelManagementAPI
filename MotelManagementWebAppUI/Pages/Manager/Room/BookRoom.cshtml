@page
@model MotelManagementWebAppUI.Pages.Room.BookRoomModel
@{
    Layout = "_LayoutManager";
    ViewData["Title"] = "Đặt phòng";
}

<div id="popup">
    @*@await Html.PartialAsync("~/Pages/Room/_AddRoomPartial.cshtml", null, new ViewDataDictionary(ViewData) { { "room", Model.NewRoom }, {"context", context } })*@
    <partial name="~/Pages/Manager/Resident/_AddResidentPartial.cshtml" model="@Model.accountDTO" />
</div>
<div style="width:100%; margin-top: 50px;margin-bottom:25px;">
    <img src="~/image/Room.png" style="width:30%; margin-left:20%; float:left;">
    <img src="~/image/resident.png" style="width:30%; margin-right:20%; float:right;">
</div>
<div style="clear:both;">
    <div style="width:50%; float:left;padding-left:25%;">
        <div><h3>Thông tin phòng thuê</h3></div>
        <div><b>Mã phòng: </b>@Model.BookedRoom.Code</div>
        <div><b>Trạng thái: </b>@Model.BookedRoom.Status</div>
        @if (!@Model.IsTheOnlyRecord) { 
            <div><b>Tiền thuê phòng hiện tại: </b>@Model.BookedRoom.RentFee (Áp dụng cho các lần thu tiền trước ngày @Model.BookedRoom.NearestNextFeeAppliedDate)</div>
            <div><b>Tiền thuê phòng áp dụng cho các lần thu tiền sau ngày @Model.BookedRoom.NearestNextFeeAppliedDate</b>: @Model.BookedRoom.NearestNextRentFee</div>
        }
        else
        {
            <div><b>Tiền thuê phòng hiện tại: </b>@Model.BookedRoom.RentFee</div>
        }
        <div><b>Thuộc nhà trọ: </b>@Model.BookedRoom.MotelChainName</div>
    </div>
    <div style="width:50%; float:right; padding-left: 10%;">
        <div><h3>Thông tin người thuê</h3></div>
        <form method="post">
            <input type="hidden" name="roomId" asp-for="@Model.RoomId"/>
            <div><b>CCCD: </b><input type="phone" maxlength="12" name="identityCardNumber" asp-for="@Model.IdentityCardNumber"/></div>
            <div style="margin-top:10px">
            <button style="width:fit-content" type="submit" asp-page-handler="SearchResident" class="btn btn-primary btn-user btn-block">Tìm người ở</button>
                <button style="width:fit-content; margin:0;" id="add-resident" type="button" class="btn btn-primary btn-user btn-block"  data-toggle="modal" data-target="#addResidentModal">Tạo tài khoản cho người thuê</button>
            </div>
            <span asp-validation-for="@Model.IdentityCardNumber" class="text-danger"></span>
            
        </form>
        <div><b>Họ và tên người thuê: </b>@Model.Resident.FullName</div>
        <div><b>Sđt: </b>@Model.Resident.Phone</div>
    </div>
</div>
<div style="clear:both; margin-top:25px">
    <form method="post" style="width:100%;">
        <div style="text-align:center;">
            <input type="hidden" name="roomId" asp-for="@Model.RoomId"/>
            <input type="hidden" name="identityCardNumberForBooking" asp-for="@Model.IdentityCardNumberForBooking"/>
            <div style="margin-bottom:15px">
                <b>Ngày thuê: </b><input style="width:fit-content;" type="date" asp-for="@Model.StartDate"
                min="@DateTime.Now.ToString("yyyy-MM-dd")" 
                max="@DateTime.Now.AddDays(15).ToString("yyyy-MM-dd")"
                value="@DateTime.Now.ToString("yyyy-MM-dd")"
                asp-format="{0:dd/MM/yyyy}"/>
            </div>
            @if (@Model.RoomId != 0 && @Model.ResidentId != 0)
            {      
                 <button style="width:fit-content;margin: auto;" class="btn btn-primary btn-user btn-block" type="submit" asp-page-handler="BookRoom">Đặt phòng</button>
            }
            else
            {
                 <button style="width:fit-content;margin: auto;" class="btn btn-primary btn-user btn-block" disabled="true" type="submit" asp-page-handler="BookRoom">Đặt phòng</button>   
            }
        </div>
    </form>
</div>


@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@section scripts {


    <script>
        $(document).ready(function () {
        $("#add-resident").click(function () {
                console.log("click");
                $("#addResidentModal").modal({
                    modal: true,
                    title: "popup title",
                    width: 400,
                    height: 300,
                    draggable: true,
                    resizable: true,

                });
            });

            $("#create-resident-form").submit(function (event) {
                event.preventDefault();
                let UserName = $("#UserName").val();
                let Password = $("#Password").val();
                let IdentityCardNumber = $("#IdentityCardNumber").val();
                let Phone = $("#Phone").val();
                let FullName = $("#FullName").val();
                let ConfirmPassword = $("#confirmPassword").val()


                console.log($("#messageCofirm"))
                if ($("#messageCofirm").css("color") === "rgb(255, 0, 0)") {
                    // nếu có, ngăn chặn việc submit form
                    event.preventDefault();
                }
                if ($(this).valid()) {

                    $.ajax({
                        url: "http://localhost:5001/api/Resident/add-resident",
                        data: JSON.stringify({
                            UserName: UserName,
                            Password: Password,
                            IdentityCardNumber: IdentityCardNumber,
                            Phone: Phone,
                            FullName: FullName,
                            ConfirmPassword: ConfirmPassword
                        }),
                        contentType: "application/json",
                        type: "POST",
                        headers: {
                            "Authorization": "Bearer @HttpContext.Request.Cookies["token"]",
                        },
                        success: function (result) {
                            $("#myModal").fadeOut();
                            // Reload the list of rooms on the main page
                            window.location.reload();
                        },
                        error: function (xhr, status, error) {

                            // Parse error response and get validation errors
                            var errorResponse = JSON.parse(xhr.responseText);
                            var validationErrors = errorResponse.errors;

                            // Create error message string
                            var errorMessage = "One or more validation errors occurred:<br>";

                            for (var key in validationErrors) {
                                if (validationErrors.hasOwnProperty(key)) {
                                    errorMessage += validationErrors[key] + "<br>";
                                }
                            }
                            var dataError = errorResponse.message;
                            errorMessage += dataError + "<br>"
                            // Show error message
                            $("#error-message").html(errorMessage);
                            $("#error-message").show();
                        },
                    });
                }

            });
        });




    </script>




    }
<partial name="_ValidationScriptsPartial" />